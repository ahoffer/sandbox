---
- name: Update All VMs
  hosts: default
  become: true
  remote_user: vagrant
  tasks:

    - name: Set authorized key taken from file
      authorized_key:
        user: vagrant
        state: present
        key: "{{ lookup('file', '.ssh/insecure_rsa.pub') }}"

    - name: Avoid vagrant trap with too many keys
      community.general.ini_file:
        path: /etc/ssh/sshd_config
        section:
        option: MaxAuthTries
        value: 50
        backup: yes

    - name: Upgrade all packages
      yum:
        name: '*'
        update_cache: yes
        state: latest

    - name: Install java and packages
      yum:
        name:
          - java-11-openjdk
          - java-11-openjdk-devel
          - python3
        state: present
        update_cache: yes

- name: Install Reflex
  hosts: reflex
  become: true
  remote_user: vagrant
  tasks:
    - name: DEBUG
      debug:
        msg: "OS {{ ansible_facts['os_family'] }}"

    - name: find
      find:
        paths: /vagrant
        patterns: "*.rpm"
      register: rpm_find

    - name: set fact
      set_fact:
        rpm_file: "{{ rpm_find.files[0].path }}"

    - name: Installing RPM file
      debug: msg="{{ rpm_file }}"

    - name: Install RPM
      yum:
        name: "{{ rpm_file }}"
      become_user: root

    - name: Turn off SSL 1
      lineinfile:
        path: /opt/reflex/etc/reflex.custom.system.properties
        regexp: 'artemis.sslEnabled\s*=\s*(true)'
        line: '\1false'
        state: present

    - name: Turn off SSL 2
      lineinfile:
        path: /opt/reflex/etc/custom.system.properties
        regexp: '(artemis.sslEnabled\s*=\s*)(true)'
        line: '\1false'
        state: present

    - name: Update reflex user
      user:
        name: reflex
        groups: syers
        append: yes

    - name: Add sudo to reflex user
      user:
        name: reflex
        groups: wheel
        append: yes
      when: ansible_facts['os_family'] == "RedHat"

    - name: Add sudo to reflex user (deb)
      user:
        name: reflex
        groups: sudo
        append: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: Remove reflex password for easy sudo
      shell: "sudo passwd -d reflex"

    - name: status
      copy:
        mode: 0755
        dest: /usr/local/bin/status
        content: |
          #! /usr/bin/bash
          sudo systemctl status reflex.service

    - name: start
      copy:
        mode: 0755
        dest: /usr/local/bin/start
        content: |
          #! /usr/bin/bash
          sudo systemctl start reflex.service

    - name: restart
      copy:
        mode: 0755
        dest: /usr/local/bin/restart
        content: |
          #! /usr/bin/bash
          sudo systemctl restart reflex.service

    - name: stop
      copy:
        mode: 0755
        dest: /usr/local/bin/stop
        content: |
          #! /usr/bin/bash
          sudo systemctl stop reflex.service

    - name: log
      copy:
        mode: 0755
        dest: /usr/local/bin/log
        content: |
          #! /usr/bin/bash
          tail -n200 -f /opt/reflex/data/log/reflex.log

- name: Install Artemis
  hosts: other
  become: true
  remote_user: vagrant
  tasks:
    - name: Check is artemis already exists
      stat:
        path: "/home/vagrant/artemis/bin/artemis"
      register: artemis_bin

    - name: Set fact
      set_fact:
        artemis_install: "{{ not artemis_bin.stat.exists }}"

    - name: Print msg
      debug:
        msg: "Install Artemis? {{ artemis_install }}"

    - name: Make Artemis destination dir
      file:
        path: /home/vagrant/artemis
        state: directory
      become_user: vagrant
      when: artemis_install

    - name: Extract artemis in home dir
      shell: "tar xf /vagrant/*artemis*.tar.gz -C /home/vagrant/artemis --strip-components 1"
      become_user: vagrant
      when: artemis_install

    - name: Create a symbolic link
      file:
        src: /home/vagrant/artemis/bin/artemis
        dest: /usr/local/bin/artemis
        state: link

    - name: Give the VM time to unzip and sort stuff out. Not sure if sleep should be here, or after creating the sym link.
      pause:
        seconds: 3
      when: artemis_install

    - name: Check if broker already exists
      stat:
        path: "/home/vagrant/reflexer"
      register: broker_dir

    - name: Set broker fact
      set_fact:
        create_broker: "{{ not broker_dir.stat.exists }}"

    - name: Create broker
      shell: >
        /usr/local/bin/artemis create reflexer
        --user admin
        --password admin
        --port-offset 0
        --host 0.0.0.0
        --role amq
        --allow-anonymous
        --addresses wps.v1.result,unicorn.v1.observation
        --verbose
        --force
      args:
        chdir: /home/vagrant
      become_user: vagrant
      when: create_broker

    - name: Add the netty connector
      replace:
        path: '/home/vagrant/reflexer/etc/broker.xml'
        backup: yes
        regexp: '(.*<acceptors>.*)'
        replace: |
          <connectors>
              <connector name="netty-connector">tcp://localhost:61616</connector>
          </connectors>
          \1

    - name: Create systemd service file for broker "reflexer"
      copy:
        dest: "/etc/systemd/system/artemis.service"
        content: |
          [Unit]
          Description=Artemis Server
          After=network.target
          [Service]
          Type=simple
          Restart=always
          RestartSec=30
          User=vagrant
          ExecStart=/home/vagrant/reflexer/bin/artemis run
          ExecStop=/home/vagrant/reflexer/bin/artemis stop
          [Install]
          WantedBy=mult-user.target

    - name: Enable/Start Artemis service
      systemd:
        name: artemis.service
        enabled: yes
        state: started
      register: service_status

    - name: Service status
      debug:
        msg: "Artemis service status is {{ service_status.state }}"

    - name: Open up Artemis Management Console
      replace:
        path: "/home/vagrant/reflexer/etc/bootstrap.xml"
        regexp: '(.*)http://localhost(.*)'
        replace: '\1http://0.0.0.0\2'

    - name: Copy words that start with "o"
      copy:
        src: ./files/o.txt
        dest: /vagrant/c.txt

    - name: Copy words that start with "c"
      copy:
        src: ./files/c.txt
        dest: /vagrant/c.txt

    - name: Install python scripts
      copy:
        src: "{{ item }}"
        dest: "/usr/local/bin"
        mode: 0755
      with_fileglob:
        - "/projects/reflex-env/py/*"
