- name: Install Artemis
  hosts: other
  become: true
  remote_user: vagrant
  tasks:
    - name: Check is artemis already exists
      stat:
        path: "/home/vagrant/artemis/bin/artemis"
      register: artemis_bin

    - name: Set fact
      set_fact:
        artemis_install: "{{ not artemis_bin.stat.exists }}"

    - name: Print msg
      debug:
        msg: "Install Artemis? {{ artemis_install }}"

    - name: Make Artemis destination dir
      file:
        path: /home/vagrant/artemis
        state: directory
      become_user: vagrant
      when: artemis_install

    - name: Extract artemis in home dir
      shell: "tar xf /vagrant/*artemis*.tar.gz -C /home/vagrant/artemis --strip-components 1"
      become_user: vagrant
      when: artemis_install

    - name: Create a symbolic link
      file:
        src: /home/vagrant/artemis/bin/artemis
        dest: /usr/local/bin/artemis
        state: link

    - name: Give the VM time to unzip and sort stuff out. Not sure if sleep should be here, or after creating the sym link.
      pause:
        seconds: 3
      when: artemis_install

    - name: Check if broker already exists
      stat:
        path: "/home/vagrant/reflexer"
      register: broker_dir

    - name: Set broker fact
      set_fact:
        create_broker: "{{ not broker_dir.stat.exists }}"

    - name: Create broker
      shell: >
        /home/vagrant/artemis/bin/artemis create reflexer
        --user admin
        --password admin
        --port-offset 0
        --host 0.0.0.0
        --role amq
        --allow-anonymous
        --queues 'wps.v1.result:multicast','unicorn.v1.observation:multicast'
        --verbose
        --force
      args:
        chdir: /home/vagrant
      become_user: vagrant
      when: create_broker

    # The XML plugin is NOT idempotent
    - name: "Establish if connector exists"
      shell: "cat /home/vagrant/reflexer/etc/broker.xml"
      register: broker_xml

    - name: Set broker.xml "netty" fact is the netty connector already exists
      set_fact:
        netty_connector: "{{ broker_xml.stdout.find('netty-connector') > 0 }}"

    - name: Add netty connector attrib
      community.general.xml:
        path: "/home/vagrant/reflexer/etc/broker.xml"
        xpath: "/x:configuration/y:core/connectors/connector[@name='netty-connector']"
        value: "tcp://10.5.0.7:61616"
        namespaces:
          "x": "urn:activemq"
          "y": "urn:activemq:core"
          "z": "urn:activemq:jms"
      when: not netty_connector

    - name: Create systemd service file for broker "reflexer"
      copy:
        dest: "/etc/systemd/system/artemis.service"
        content: |
          [Unit]
          Description=Artemis Server
          After=network.target
          [Service]
          Type=simple
          Restart=always
          RestartSec=30
          User=vagrant
          ExecStart=/home/vagrant/reflexer/bin/artemis run
          ExecStop=/home/vagrant/reflexer/bin/artemis stop
          [Install]
          WantedBy=mult-user.target

    - name: Enable/Start Artemis service
      systemd:
        name: artemis.service
        enabled: yes
        state: restarted
      register: service_status

    - name: Service status
      debug:
        msg: "Artemis service status is {{ service_status.state }}"

    - name: Open up Artemis Management Console
      replace:
        path: "/home/vagrant/reflexer/etc/bootstrap.xml"
        regexp: '(.*)http://localhost(.*)'
        replace: '\1http://0.0.0.0\2'

    - name: status
      copy:
        mode: 0755
        dest: /usr/bin/status
        content: |
          #! /usr/bin/bash
          sudo systemctl status artemis.service

    - name: start
      copy:
        mode: 0755
        dest: /usr/bin/start
        content: |
          #! /usr/bin/bash
          sudo systemctl start aretmis.service

    - name: restart
      copy:
        mode: 0755
        dest: /usr/bin/restart
        content: |
          #! /usr/bin/bash
          sudo systemctl restart artemis.service

    - name: stop
      copy:
        mode: 0755
        dest: /usr/bin/stop
        content: |
          #! /usr/bin/bash
          sudo systemctl stop artemis.service

    - name: log
      copy:
        mode: 0755
        dest: /usr/bin/log
        content: |
          #! /usr/bin/bash
          sudo journalctl -f -u artemis.service

    - name: produce
      copy:
        mode: 0755
        dest: /usr/bin/produce
        content: |
          #! /usr/bin/bash
          artemis producer \
          --destination 'topic://wps.v1.result' \
          --message-count 99999999 \
          --url 'tcp://10.5.0.7:61616' \
          --user admin \
          --password admin \
          --sleep 2000 \
          --message-size 32 \
          --verbose

    - name: consume
      copy:
        mode: 0755
        dest: /usr/bin/consume
        content: |
          #! /usr/bin/bash
          artemis consumer \
          --destination topic://wps.v1.result \
          --message-count 99999999 \
          --url 'tcp://10.5.0.7:61616' \
          --user admin \
          --password admin \
          --verbose \